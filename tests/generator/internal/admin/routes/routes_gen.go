// Code generated by bico-admin code generator. DO NOT EDIT.
// Generated at: 2025-07-18 16:06:30

package routes

import (
	"github.com/gin-gonic/gin"
)


// CompleteTestModelRouteRegistrar CompleteTestModel路由注册器
type CompleteTestModelRouteRegistrar struct{}

// RegisterProtectedRoutes 实现 ProtectedRouteRegistrar 接口
func (r *CompleteTestModelRouteRegistrar) RegisterProtectedRoutes(protectedGroup *gin.RouterGroup, handlers *Handlers) {
	RegisterCompleteTestModelRoutes(protectedGroup, handlers)
}

// RegisterCompleteTestModelRoutes 注册CompleteTestModel路由（需要认证）
func RegisterCompleteTestModelRoutes(protectedGroup *gin.RouterGroup, handlers *Handlers) {
	// CompleteTestModel路由组
	completetestmodelGroup := protectedGroup.Group("/complete-test-model")
	{
		completetestmodelGroup.GET("", handlers.CompleteTestModelHandler.GetList)
		completetestmodelGroup.GET("/:id", handlers.CompleteTestModelHandler.GetByID)
		completetestmodelGroup.POST("", handlers.CompleteTestModelHandler.Create)
		completetestmodelGroup.PUT("/:id", handlers.CompleteTestModelHandler.Update)
		completetestmodelGroup.DELETE("/:id", handlers.CompleteTestModelHandler.Delete)
	}
}

// OrderRouteRegistrar Order路由注册器
type OrderRouteRegistrar struct{}

// RegisterProtectedRoutes 实现 ProtectedRouteRegistrar 接口
func (r *OrderRouteRegistrar) RegisterProtectedRoutes(protectedGroup *gin.RouterGroup, handlers *Handlers) {
	RegisterOrderRoutes(protectedGroup, handlers)
}

// RegisterOrderRoutes 注册Order路由（需要认证）
func RegisterOrderRoutes(protectedGroup *gin.RouterGroup, handlers *Handlers) {
	// Order路由组
	orderGroup := protectedGroup.Group("/order")
	{
		orderGroup.GET("", handlers.OrderHandler.GetList)
		orderGroup.GET("/:id", handlers.OrderHandler.GetByID)
		orderGroup.POST("", handlers.OrderHandler.Create)
		orderGroup.PUT("/:id", handlers.OrderHandler.Update)
		orderGroup.DELETE("/:id", handlers.OrderHandler.Delete)
	}
}

// UserRouteRegistrar User路由注册器
type UserRouteRegistrar struct{}

// RegisterProtectedRoutes 实现 ProtectedRouteRegistrar 接口
func (r *UserRouteRegistrar) RegisterProtectedRoutes(protectedGroup *gin.RouterGroup, handlers *Handlers) {
	RegisterUserRoutes(protectedGroup, handlers)
}

// RegisterUserRoutes 注册User路由（需要认证）
func RegisterUserRoutes(protectedGroup *gin.RouterGroup, handlers *Handlers) {
	// User路由组
	userGroup := protectedGroup.Group("/user")
	{
		userGroup.GET("", handlers.UserHandler.GetList)
		userGroup.GET("/:id", handlers.UserHandler.GetByID)
		userGroup.POST("", handlers.UserHandler.Create)
		userGroup.PUT("/:id", handlers.UserHandler.Update)
		userGroup.DELETE("/:id", handlers.UserHandler.Delete)
	}
}

// ArticleRouteRegistrar Article路由注册器
type ArticleRouteRegistrar struct{}

// RegisterProtectedRoutes 实现 ProtectedRouteRegistrar 接口
func (r *ArticleRouteRegistrar) RegisterProtectedRoutes(protectedGroup *gin.RouterGroup, handlers *Handlers) {
	RegisterArticleRoutes(protectedGroup, handlers)
}

// RegisterArticleRoutes 注册Article路由（需要认证）
func RegisterArticleRoutes(protectedGroup *gin.RouterGroup, handlers *Handlers) {
	// Article路由组
	articleGroup := protectedGroup.Group("/article")
	{
		articleGroup.GET("", handlers.ArticleHandler.GetList)
		articleGroup.GET("/:id", handlers.ArticleHandler.GetByID)
		articleGroup.POST("", handlers.ArticleHandler.Create)
		articleGroup.PUT("/:id", handlers.ArticleHandler.Update)
		articleGroup.DELETE("/:id", handlers.ArticleHandler.Delete)
	}
}

// FieldTypesTestRouteRegistrar FieldTypesTest路由注册器
type FieldTypesTestRouteRegistrar struct{}

// RegisterProtectedRoutes 实现 ProtectedRouteRegistrar 接口
func (r *FieldTypesTestRouteRegistrar) RegisterProtectedRoutes(protectedGroup *gin.RouterGroup, handlers *Handlers) {
	RegisterFieldTypesTestRoutes(protectedGroup, handlers)
}

// RegisterFieldTypesTestRoutes 注册FieldTypesTest路由（需要认证）
func RegisterFieldTypesTestRoutes(protectedGroup *gin.RouterGroup, handlers *Handlers) {
	// FieldTypesTest路由组
	fieldtypestestGroup := protectedGroup.Group("/field-types-test")
	{
		fieldtypestestGroup.GET("", handlers.FieldTypesTestHandler.GetList)
		fieldtypestestGroup.GET("/:id", handlers.FieldTypesTestHandler.GetByID)
		fieldtypestestGroup.POST("", handlers.FieldTypesTestHandler.Create)
		fieldtypestestGroup.PUT("/:id", handlers.FieldTypesTestHandler.Update)
		fieldtypestestGroup.DELETE("/:id", handlers.FieldTypesTestHandler.Delete)
	}
}


// init 自动注册所有路由
func init() {
	// 注册CompleteTestModel路由
	completetestmodelRegistrar := &CompleteTestModelRouteRegistrar{}
	RegisterProtectedRouteRegistrar(completetestmodelRegistrar)
	// 注册Order路由
	orderRegistrar := &OrderRouteRegistrar{}
	RegisterProtectedRouteRegistrar(orderRegistrar)
	// 注册User路由
	userRegistrar := &UserRouteRegistrar{}
	RegisterProtectedRouteRegistrar(userRegistrar)
	// 注册Article路由
	articleRegistrar := &ArticleRouteRegistrar{}
	RegisterProtectedRouteRegistrar(articleRegistrar)
	// 注册FieldTypesTest路由
	fieldtypestestRegistrar := &FieldTypesTestRouteRegistrar{}
	RegisterProtectedRouteRegistrar(fieldtypestestRegistrar)
}
