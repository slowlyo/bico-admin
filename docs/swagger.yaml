basePath: /
definitions:
  bico-admin_internal_admin_types.AdminLoginRequest:
    properties:
      captcha:
        type: string
      password:
        maxLength: 100
        minLength: 6
        type: string
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - captcha
    - password
    - username
    type: object
  bico-admin_internal_admin_types.AdminLoginResponse:
    properties:
      expires_at:
        type: string
      permissions:
        items:
          type: string
        type: array
      token:
        type: string
      user_info:
        $ref: '#/definitions/bico-admin_internal_shared_types.UserInfo'
    type: object
  bico-admin_internal_admin_types.AdminProfileResponse:
    properties:
      permissions:
        items:
          type: string
        type: array
      user_info:
        $ref: '#/definitions/bico-admin_internal_admin_types.AdminUserResponse'
    type: object
  bico-admin_internal_admin_types.AdminUserCreateRequest:
    properties:
      avatar:
        maxLength: 255
        type: string
      email:
        maxLength: 100
        type: string
      enabled:
        type: boolean
      name:
        maxLength: 100
        minLength: 1
        type: string
      password:
        maxLength: 100
        minLength: 6
        type: string
      phone:
        maxLength: 20
        type: string
      remark:
        maxLength: 500
        type: string
      role_ids:
        description: 角色ID列表
        items:
          type: integer
        type: array
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - name
    - password
    - username
    type: object
  bico-admin_internal_admin_types.AdminUserResponse:
    properties:
      avatar:
        type: string
      can_delete:
        description: 是否可删除
        type: boolean
      can_disable:
        description: 是否可禁用
        type: boolean
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      last_login_at:
        type: string
      name:
        type: string
      phone:
        type: string
      remark:
        type: string
      roles:
        description: 用户角色列表
        items:
          $ref: '#/definitions/bico-admin_internal_admin_types.AdminUserRoleResponse'
        type: array
      status:
        type: integer
      status_text:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  bico-admin_internal_admin_types.AdminUserRoleResponse:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  bico-admin_internal_admin_types.AdminUserUpdateRequest:
    properties:
      avatar:
        maxLength: 255
        type: string
      email:
        maxLength: 100
        type: string
      enabled:
        type: boolean
      name:
        maxLength: 100
        minLength: 1
        type: string
      password:
        description: 可选，为空则不更新密码
        maxLength: 100
        minLength: 6
        type: string
      phone:
        maxLength: 20
        type: string
      remark:
        maxLength: 500
        type: string
      role_ids:
        description: 角色ID列表
        items:
          type: integer
        type: array
      username:
        maxLength: 50
        minLength: 3
        type: string
    required:
    - name
    - username
    type: object
  bico-admin_internal_admin_types.ChangePasswordRequest:
    properties:
      new_password:
        maxLength: 100
        minLength: 6
        type: string
      old_password:
        maxLength: 100
        minLength: 6
        type: string
    required:
    - new_password
    - old_password
    type: object
  bico-admin_internal_admin_types.PermissionTreeNode:
    properties:
      children:
        description: 子节点
        items:
          $ref: '#/definitions/bico-admin_internal_admin_types.PermissionTreeNode'
        type: array
      key:
        description: 权限代码或模块代码
        type: string
      selected:
        description: 是否选中
        type: boolean
      title:
        description: 显示名称
        type: string
      type:
        description: 类型：module 或 action
        type: string
    type: object
  bico-admin_internal_admin_types.ProfileUpdateRequest:
    properties:
      avatar:
        maxLength: 255
        type: string
      email:
        maxLength: 100
        type: string
      name:
        maxLength: 100
        minLength: 1
        type: string
      phone:
        maxLength: 20
        type: string
    required:
    - name
    type: object
  bico-admin_internal_admin_types.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  bico-admin_internal_admin_types.RoleAssignRequest:
    properties:
      role_ids:
        items:
          type: integer
        minItems: 1
        type: array
      user_id:
        type: integer
    required:
    - role_ids
    - user_id
    type: object
  bico-admin_internal_admin_types.RoleCreateRequest:
    properties:
      code:
        maxLength: 50
        minLength: 1
        type: string
      description:
        maxLength: 500
        type: string
      name:
        maxLength: 100
        minLength: 1
        type: string
      permissions:
        description: 权限代码列表
        items:
          type: string
        type: array
      status:
        enum:
        - 0
        - 1
        type: integer
    required:
    - code
    - name
    type: object
  bico-admin_internal_admin_types.RoleOptionResponse:
    properties:
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  bico-admin_internal_admin_types.RolePermissionResponse:
    properties:
      level:
        type: integer
      module:
        type: string
      permission_code:
        type: string
      permission_name:
        type: string
    type: object
  bico-admin_internal_admin_types.RolePermissionUpdateRequest:
    properties:
      permissions:
        description: 权限代码列表
        items:
          type: string
        type: array
    required:
    - permissions
    type: object
  bico-admin_internal_admin_types.RoleResponse:
    properties:
      can_delete:
        description: 是否可删除
        type: boolean
      can_edit:
        description: 是否可编辑
        type: boolean
      code:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/bico-admin_internal_admin_types.RolePermissionResponse'
        type: array
      status:
        type: integer
      status_text:
        type: string
      updated_at:
        type: string
      user_count:
        description: 拥有该角色的用户数量
        type: integer
    type: object
  bico-admin_internal_admin_types.RoleUpdateRequest:
    properties:
      description:
        maxLength: 500
        type: string
      name:
        maxLength: 100
        minLength: 1
        type: string
      permissions:
        description: 权限代码列表
        items:
          type: string
        type: array
      status:
        enum:
        - 0
        - 1
        type: integer
    required:
    - name
    type: object
  bico-admin_internal_admin_types.StatusRequest:
    properties:
      status:
        enum:
        - 0
        - 1
        - -1
        type: integer
    type: object
  bico-admin_internal_shared_types.UserInfo:
    properties:
      avatar:
        type: string
      email:
        type: string
      id:
        type: integer
      nickname:
        type: string
      status:
        type: integer
      user_type:
        type: string
      username:
        type: string
    type: object
  bico-admin_pkg_response.ApiResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  bico-admin_pkg_response.PageResponse:
    properties:
      list: {}
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  internal_admin_handler.MultiUploadResponse:
    properties:
      files:
        description: 上传成功的文件列表
        items:
          $ref: '#/definitions/internal_admin_handler.UploadResponse'
        type: array
      total:
        description: 总文件数
        type: integer
    type: object
  internal_admin_handler.UploadResponse:
    properties:
      file_name:
        description: 原始文件名
        type: string
      file_path:
        description: 文件访问路径
        type: string
      file_size:
        description: 文件大小（字节）
        type: integer
      file_type:
        description: 文件类型
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Bico Admin 管理系统API文档
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Bico Admin API
  version: "1.0"
paths:
  /admin/admin-users:
    get:
      description: 分页获取管理员用户列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 用户名
        in: query
        name: username
        type: string
      - description: 姓名
        in: query
        name: name
        type: string
      - description: 状态
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.PageResponse'
            - properties:
                list:
                  items:
                    $ref: '#/definitions/bico-admin_internal_admin_types.AdminUserResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取管理员用户列表
      tags:
      - 管理员用户管理
    post:
      consumes:
      - application/json
      description: 创建新的管理员用户
      parameters:
      - description: 创建管理员用户请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/bico-admin_internal_admin_types.AdminUserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/bico-admin_internal_admin_types.AdminUserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: 创建管理员用户
      tags:
      - 管理员用户管理
  /admin/admin-users/{id}:
    delete:
      description: 软删除管理员用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: 删除管理员用户
      tags:
      - 管理员用户管理
    get:
      description: 根据用户ID获取管理员用户详细信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/bico-admin_internal_admin_types.AdminUserResponse'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: 根据ID获取管理员用户
      tags:
      - 管理员用户管理
    put:
      consumes:
      - application/json
      description: 更新管理员用户信息
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新管理员用户请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/bico-admin_internal_admin_types.AdminUserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/bico-admin_internal_admin_types.AdminUserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新管理员用户
      tags:
      - 管理员用户管理
  /admin/admin-users/{id}/status:
    patch:
      consumes:
      - application/json
      description: 启用或禁用管理员用户
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: 状态更新请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/bico-admin_internal_admin_types.StatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新管理员用户状态
      tags:
      - 管理员用户管理
  /admin/auth/login:
    post:
      consumes:
      - application/json
      description: 管理员登录接口
      parameters:
      - description: 登录请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/bico-admin_internal_admin_types.AdminLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/bico-admin_internal_admin_types.AdminLoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      summary: 管理员登录
      tags:
      - 认证
  /admin/auth/logout:
    post:
      description: 管理员登出接口
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: 登出
      tags:
      - 认证
  /admin/auth/profile:
    get:
      description: 获取当前登录用户的详细信息和权限列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/bico-admin_internal_admin_types.AdminProfileResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: 获取当前用户信息和权限
      tags:
      - 认证
  /admin/auth/refresh:
    post:
      consumes:
      - application/json
      description: 刷新访问令牌
      parameters:
      - description: 刷新令牌请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/bico-admin_internal_admin_types.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/bico-admin_internal_admin_types.AdminLoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      summary: 刷新令牌
      tags:
      - 认证
  /admin/profile:
    put:
      consumes:
      - application/json
      description: 更新当前登录用户的信息
      parameters:
      - description: 更新个人信息请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/bico-admin_internal_admin_types.ProfileUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/bico-admin_internal_admin_types.AdminUserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: 更新当前用户信息
      tags:
      - 认证
  /admin/profile/password:
    put:
      consumes:
      - application/json
      description: 修改当前登录用户的密码
      parameters:
      - description: 修改密码请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/bico-admin_internal_admin_types.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: 修改密码
      tags:
      - 认证
  /admin/roles/{id}/status:
    patch:
      consumes:
      - application/json
      description: 启用或禁用角色
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      - description: 状态更新请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/bico-admin_internal_admin_types.StatusRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      summary: 更新角色状态
      tags:
      - 角色管理
  /admin/roles/options:
    get:
      consumes:
      - application/json
      description: 获取所有启用的角色选项，用于下拉选择
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/bico-admin_internal_admin_types.RoleOptionResponse'
                  type: array
              type: object
      summary: 获取角色选项
      tags:
      - 角色管理
  /admin/upload:
    post:
      consumes:
      - multipart/form-data
      description: 支持单文件或多文件上传，可通过dir参数指定上传目录
      parameters:
      - description: 上传目录，不指定则存储在根目录
        in: query
        name: dir
        type: string
      - description: 上传的文件
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/internal_admin_handler.MultiUploadResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      summary: 文件上传
      tags:
      - 通用接口
  /api/admin/roles:
    get:
      consumes:
      - application/json
      description: 获取角色列表，支持分页和条件筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 角色名称
        in: query
        name: name
        type: string
      - description: 角色代码
        in: query
        name: code
        type: string
      - description: 状态
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/bico-admin_pkg_response.PageResponse'
              type: object
      summary: 获取角色列表
      tags:
      - 角色管理
    post:
      consumes:
      - application/json
      description: 创建新角色
      parameters:
      - description: 角色信息
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/bico-admin_internal_admin_types.RoleCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/bico-admin_internal_admin_types.RoleResponse'
              type: object
      summary: 创建角色
      tags:
      - 角色管理
  /api/admin/roles/{id}:
    delete:
      consumes:
      - application/json
      description: 删除角色
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      summary: 删除角色
      tags:
      - 角色管理
    get:
      consumes:
      - application/json
      description: 根据ID获取角色详情
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/bico-admin_internal_admin_types.RoleResponse'
              type: object
      summary: 获取角色详情
      tags:
      - 角色管理
    put:
      consumes:
      - application/json
      description: 更新角色信息
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      - description: 角色信息
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/bico-admin_internal_admin_types.RoleUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/bico-admin_internal_admin_types.RoleResponse'
              type: object
      summary: 更新角色
      tags:
      - 角色管理
  /api/admin/roles/{id}/permissions:
    put:
      consumes:
      - application/json
      description: 更新角色的权限配置
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      - description: 权限信息
        in: body
        name: permissions
        required: true
        schema:
          $ref: '#/definitions/bico-admin_internal_admin_types.RolePermissionUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      summary: 更新角色权限
      tags:
      - 角色管理
  /api/admin/roles/assign:
    post:
      consumes:
      - application/json
      description: 为管理员用户分配角色
      parameters:
      - description: 角色分配信息
        in: body
        name: assignment
        required: true
        schema:
          $ref: '#/definitions/bico-admin_internal_admin_types.RoleAssignRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      summary: 为用户分配角色
      tags:
      - 角色管理
  /api/admin/roles/permissions:
    get:
      consumes:
      - application/json
      description: 获取权限树，用于角色权限分配
      parameters:
      - description: 角色ID，用于标记已选中的权限
        in: query
        name: role_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/bico-admin_internal_admin_types.PermissionTreeNode'
                  type: array
              type: object
      summary: 获取权限树
      tags:
      - 角色管理
  /api/hello:
    get:
      description: API端简单的Hello接口
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      summary: API端Hello
      tags:
      - API
  /master/hello:
    get:
      description: 主控端简单的Hello接口
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/bico-admin_pkg_response.ApiResponse'
      summary: 主控端Hello
      tags:
      - 主控端
securityDefinitions:
  ApiKeyAuth:
    description: Bearer token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
